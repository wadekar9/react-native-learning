- The react native renderer distrubutes the work the render pipeline across multiple threads.
- Here we define the threading model and provide some examples to illustrate thread usage of the render pipeline.
- React Native renderer is designed to be thread safe. At a high level thread safety is guaranteed by using immutable data structures in the internals of the framework(enforced by c++ "const correctness" feature). This means that every update in React creates or clones new objects in the renderer instead of updating data structures. This allows the framework to expose thread safe and synchronous APIs to React.

- The renderer uses two different threads.
- UI thread(often called main): The only thread that can manipulate host views.
- Javascript thread: This is where React's render phase, as well as layout, are executed.


# ReactNative Animated API
- The Animated library helps you create smooth and powerful animations easily. It works by linking an animated value to a components's style and updating it over time.

V - Animated.Value
C - Connect to component
F - Animate with a function

# How it works :
- Create an animated value - This is the starting point for you animation.
- Connect it to a component - Attach the value to style properties like opacity, position or scale.
- Animate it with a function - Use methods like Animated.timing() to update the value smoothly.